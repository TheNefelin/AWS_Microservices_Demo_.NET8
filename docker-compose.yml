version: '3.8'

services:
  service-discovery:
    build:
      context: .
      dockerfile: ServiceDiscovery/Dockerfile
    ports:
      - "5000:8080"  # Host:Container
    networks:
      - microservices-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  product-service:
    build:
      context: .
      dockerfile: ProductService/Dockerfile
    ports:
      - "5001:8080"  # Host:Container
    environment:
      - ServiceDiscoveryUrl=http://service-discovery:8080
    depends_on:
      service-discovery:
        condition: service_healthy
    networks:
      - microservices-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  order-service:
    build:
      context: .
      dockerfile: OrderService/Dockerfile
    ports:
      - "5002:8080"  # Host:Container
    environment:
      - ServiceDiscoveryUrl=http://service-discovery:8080
    depends_on:
      service-discovery:
        condition: service_healthy
    networks:
      - microservices-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  api-gateway:
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - "5003:8080"  # Host:Container
    environment:
      - Services__ProductService__Url=http://product-service:8080
      - Services__OrderService__Url=http://order-service:8080
    depends_on:
      service-discovery:
        condition: service_healthy
      product-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
    networks:
      - microservices-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

networks:
  microservices-network:
    driver: bridge